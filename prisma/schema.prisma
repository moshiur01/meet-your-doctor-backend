// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Specialization {
  id          String  @id @default(uuid())
  name        String
  description String? //optional field

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  //ref fields
  doctor Doctor[]
  // service Service[]

  @@map("specializations")
}

model Education {
  id String @id @default(uuid())

  from String
  to   String

  degreeName     String @map("degree_name")
  universityName String @map("university_name")

  doctorId String

  doctor Doctor @relation(fields: [doctorId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("educations")
}

model Experience {
  id String @id @default(uuid())

  from String
  to   String

  designation   String
  WorkPlaceName String @map("work_place_name")

  doctorId String

  doctor Doctor @relation(fields: [doctorId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("experiences")
}

model Doctor {
  id       String  @id @default(uuid())
  email    String  @unique
  password String
  name     String  @map("name")
  phone    String? @unique @map("phone")
  photo    String? @default("https://png.pngtree.com/png-vector/20200408/ourlarge/pngtree-vector-design-of-young-doctor-with-stethoscope-png-image_2178293.jpg") @map("image_url")

  role   String  @default("doctor")
  gender String?

  bio String?

  about String?

  avgRating Float @default(0) @map("avg_rating")

  totalRating Int @default(0) @map("total_Rating")

  isPasswordReset Boolean @default(false) @map("is_password_reset")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  //ref fields
  specializationId String         @map("specialization_id")
  specialization   Specialization @relation(fields: [specializationId], references: [id])

  timeSlots TimeSlot[]

  appointments Appointment[]

  educations Education[]

  experiences Experience[]

  doctorReviews DoctorReview[]

  doctorServices DoctorService[]

  @@map("doctors")
}

model TimeSlot {
  id String @id @default(uuid())

  startTime String @map("start_time")
  EndTime   String @map("end_time")
  day       String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  //ref fields
  doctorId String @map("doctor_id")
  doctor   Doctor @relation(fields: [doctorId], references: [id])

  //foreign
  doctorServices DoctorService[]

  appointments Appointment[]

  @@map("time_slots")
}

model DoctorService {
  id             String  @id @default(uuid())
  availableSeats Int     @map("available_seats")
  isBooked       Boolean @default(false) @map("is_booked")
  fees           String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  //ref fields
  doctorId String @map("doctor_id")
  doctor   Doctor @relation(fields: [doctorId], references: [id])

  slotId String   @map("slot_id")
  slot   TimeSlot @relation(fields: [slotId], references: [id])

  appointments Appointment[]

  @@unique([slotId])
  @@map("doctor_services")
}

model Patient {
  id        String   @id @default(uuid())
  name      String   @map("name")
  email     String   @unique
  password  String
  role      String   @default("patient")
  gender    String
  photo     String?  @default("https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ2a4xxU0NG6NU0MrfhXkenFNvNMFScB1eDRokLNrMP8seq585qB4EKsddo-1_T6WDTu1g&usqp=CAU")
  bloodType String?
  phone     String   @unique @map("phone")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  appointment Appointment[]

  doctorReviewGiven DoctorReview[]

  @@map("patients")
}

model Appointment {
  id               String   @id @default(uuid())
  status           String   @map("appointment_status")
  prescriptionLink String?  @map("prescription_link")
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")

  //ref fields
  patientId String  @map("patient_id")
  patient   Patient @relation(fields: [patientId], references: [id])

  doctorId String @map("doctor_id")
  doctor   Doctor @relation(fields: [doctorId], references: [id])

  doctorServiceId String        @map("doctor_service_id")
  doctorService   DoctorService @relation(fields: [doctorServiceId], references: [id])

  slotId   String   @map("slot_id")
  timeSlot TimeSlot @relation(fields: [slotId], references: [id])

  //foreign
  payment  Payment?
  medicine Medicine?

  @@map("appointments")
}

model Payment {
  id            String    @id @default(uuid())
  amount        String
  paymentDate   DateTime? @map("payment_date")
  paymentStatus String    @map("payment_status")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  //ref fields
  appointmentId String      @unique @map("appointment_id")
  appointment   Appointment @relation(fields: [appointmentId], references: [id])

  @@map("payments")
}

model Medicine {
  id     String @id @default(uuid())
  status String

  //ref fields
  appointmentId String      @unique @map("appointment_id")
  appointment   Appointment @relation(fields: [appointmentId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("medicines_for_patients")
}

// model Prescription {
//   id   String @id @default(uuid())
//   link String

//   //ref id
//   appointmentId String      @unique @map("appointment_id")
//   appointment   Appointment @relation(fields: [appointmentId], references: [id])

//   @@map("patient_prescription")
// }

model DoctorReview {
  id String @id @default(uuid())

  reviewText String
  rating     Int

  doctorId String
  doctor   Doctor @relation(fields: [doctorId], references: [id])

  patientId String

  patient Patient @relation(fields: [patientId], references: [id])

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model MedicineMan {
  id          String @id @default(uuid())
  name        String
  email       String @unique
  phoneNumber String @unique
  photo       String @default("https://i.pinimg.com/originals/bf/12/c0/bf12c05be7f73150f05115653979c510.png")
  password    String
  role        String @default("medicineMan")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("medicine_mans")
}

model Admin {
  id              String  @id @default(uuid())
  name            String
  email           String  @unique
  phoneNumber     String  @unique
  photo           String  @default("https://www.shutterstock.com/image-vector/user-icon-vector-260nw-393536320.jpg")
  password        String
  role            String  @default("admin")
  isPasswordReset Boolean @default(true) @map("is_password_reset")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("admins")
}
