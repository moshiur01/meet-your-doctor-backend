// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Doctor {
  id              String  @id @default(uuid())
  fullName        String  @map("full_name")
  email           String  @unique
  phoneNumber     String  @unique @map("phone_number")
  gender          String
  imageURL        String  @map("image_url")
  role            String  @default("doctor")
  password        String
  isPasswordReset Boolean @default(false) @map("is_password_reset")
  qualification   String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  //ref fields
  specializationId String         @map("specialization_id")
  specialization   Specialization @relation(fields: [specializationId], references: [id])

  availability AvailableDoctor[]

  @@map("doctors")
}

model Specialization {
  id          String  @id @default(uuid())
  name        String
  description String? //optional field

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  //ref fields
  doctor  Doctor[]
  service Service[]

  @@map("specializations")
}

model Patient {
  id          String @id @default(uuid())
  fullName    String @map("full_name")
  email       String @unique
  phoneNumber String @unique @map("phone_number")
  role        String @default("patient")
  password    String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  //ref fields
  medicalProfile MedicalProfile?
  appointment    Appointment[]

  @@map("patients")
}

model MedicalProfile {
  id               String  @id @default(uuid())
  profilePicture   String? @map("profile_picture")
  address          String
  dateOfBirth      String  @map("date_of_birth")
  gender           String
  medicalHistory   String? @map("medical_history")
  emergencyContact String? @map("emergency_contact")
  profileStatus    Boolean @map("profile_status")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  //ref fields
  patientId String  @unique() @map("patient_id")
  patient   Patient @relation(fields: [patientId], references: [id])

  @@map("medical_profiles")
}

model Appointment {
  id              String   @id @default(uuid())
  appointmentDate DateTime @map("appointment_date")
  status          String   @map("appointment_status")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  //ref fields
  patientId String  @map("patient_id")
  patient   Patient @relation(fields: [patientId], references: [id])

  availableServiceId String           @map("available_service_id")
  availableService   AvailableService @relation(fields: [availableServiceId], references: [id])

  payment Payment?

  @@map("appointments")
}

model Service {
  id          String  @id @default(uuid())
  name        String  @unique
  description String?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  //ref fields
  specializationId String         @map("specialization_id")
  specialization   Specialization @relation(fields: [specializationId], references: [id])

  availableServices AvailableService[]

  @@map("services")
}

model Payment {
  id            String    @id @default(uuid())
  amount        String
  paymentDate   DateTime? @map("payment_date")
  paymentStatus String    @map("payment_status")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  //ref fields
  appointmentId String      @unique @map("appointment_id")
  appointment   Appointment @relation(fields: [appointmentId], references: [id])

  @@map("payments")
}

model AvailableService {
  id             String   @id @default(uuid())
  slotDate       DateTime @map("slot_date")
  availableSeats Int      @map("available_seats")
  isBooked       Boolean  @default(false) @map("is_booked")
  fees           String

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  //ref fields
  availableDoctorId String          @map("available_doctor_id")
  availableDoctor   AvailableDoctor @relation(fields: [availableDoctorId], references: [id])

  serviceId String  @map("service_id")
  service   Service @relation(fields: [serviceId], references: [id])

  slotId String   @map("slot_id")
  slot   TimeSlot @relation(fields: [slotId], references: [id])

  appointments Appointment[]

  @@unique([slotId, availableDoctorId, slotDate, serviceId])
  @@map("available_services")
}

model TimeSlot {
  id        String @id @default(uuid())
  startTime String @map("start_time")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  //ref fields
  availableServices AvailableService[]
  availableDoctors  AvailableDoctor[]

  @@map("time_slots")
}

model AvailableDoctor {
  id            String   @id @default(uuid())
  availableDate DateTime @map("available_date")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  //ref fields
  doctorId String @map("doctor_id")
  doctor   Doctor @relation(fields: [doctorId], references: [id])

  slotId String   @map("slot_id")
  slot   TimeSlot @relation(fields: [slotId], references: [id])

  availableServices AvailableService[]

  @@unique([doctorId, slotId, availableDate])
  @@map("available_doctors")
}

model Admin {
  id              String  @id @default(uuid())
  fullName        String  @map("full_name")
  email           String  @unique
  phoneNumber     String  @unique
  image           String
  password        String
  role            String  @default("admin")
  isPasswordReset Boolean @default(true) @map("is_password_reset")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("admins")
}
